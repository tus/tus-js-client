{"version":3,"sources":["node_modules/browserify/node_modules/browser-pack/_prelude.js","lib/browser/base64.js","lib/browser/request.js","lib/browser/source.js","lib/browser/storage.js","lib/error.js","lib/fingerprint.js","lib/index.js","lib/isReactNative.js","lib/upload.js","lib/uriToBlob.js","node_modules/extend/index.js","node_modules/querystringify/index.js","node_modules/requires-port/index.js","node_modules/url-parse/index.js"],"names":["f","exports","module","define","amd","g","window","global","self","this","tus","e","t","n","r","s","o","u","a","require","i","Error","code","l","call","length","1","_dereq_","encode","btoa","data","unescape","encodeURIComponent","isSupported","newRequest","resolveUrl","XMLHttpRequest","origin","link","_urlParse2","default","toString","getSource","FileSource","file","_classCallCheck","_file","size","start","end","slice","input","setItem","getItem","removeItem","hasStorage","key","localStorage","SECURITY_ERR","QUOTA_EXCEEDED_ERR","canStoreURLs","value","DetailedError","error","causingErr","arguments","undefined","xhr","_this","_possibleConstructorReturn","Object","getPrototypeOf","message","originalRequest","causingError","status","responseText","fingerprint","options","name","type","lastModified","endpoint","join","defaultOptions","_window","Blob","prototype","Upload","_upload2","_storage","isReactNative","navigator","product","toLowerCase","Base64","Storage","_fingerprint2","resume","onProgress","onChunkComplete","onSuccess","onError","headers","chunkSize","Infinity","withCredentials","uploadUrl","uploadSize","overridePatchMethod","retryDelays","removeFingerprintOnSuccess","_extend2","url","_xhr","_fingerprint","_offset","_aborted","_size","_source","_retryAttempt","_retryTimeout","_offsetBeforeRetry","_emitError","_isReactNative2","_typeof","_uriToBlob2","uri","then","blob","_start","catch","err","_this2","source","isNaN","errorCallback","shouldResetDelays","isOnline","onLine","shouldRetry","inStatusCategory","delay","setTimeout","_resumeUpload","resumedUrl","_createUpload","abort","close","clearTimeout","_error2","bytesSent","bytesTotal","bytesAccepted","setRequestHeader","_this3","_request","open","onload","_emitXhrError","location","getResponseHeader","_emitSuccess","_startUpload","onerror","_setupXHR","metadata","encodeMetadata","send","_this4","offset","parseInt","_emitProgress","_this5","_emitChunkComplete","upload","onprogress","lengthComputable","loaded","encoded","push","category","uriToBlob","Promise","resolve","reject","responseType","response","hasOwn","hasOwnProperty","toStr","isArray","arr","Array","isPlainObject","obj","hasOwnConstructor","hasIsPrototypeOf","constructor","extend","src","copy","copyIsArray","clone","target","deep","has","decode","decodeURIComponent","replace","querystring","query","parser","result","part","exec","querystringify","prefix","pairs","stringify","parse","required","port","protocol","split","qs","protocolre","slashes","rules","sanitize","address","NaN","ignore","hash","lolcation","loc","finaldestination","Url","pathname","test","href","extractProtocol","match","rest","relative","base","path","concat","last","unshift","up","splice","extracted","instruction","index","instructions","indexOf","charAt","host","hostname","username","password","auth","set","fn","pop","char","ins"],"mappings":"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":"generated.js","sourceRoot":"","sourcesContent":["(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})","/* global: window */\n\nconst {btoa} = window;\n\nexport function encode(data) {\n  return btoa(unescape(encodeURIComponent(data)));\n}\n\nexport const isSupported = \"btoa\" in window;\n","/* global window */\nimport URL from \"url-parse\";\n\nexport function newRequest() {\n  return new window.XMLHttpRequest();\n}\n\nexport function resolveUrl(origin, link) {\n  return new URL(link, origin).toString();\n}\n","class FileSource {\n  constructor(file) {\n    this._file = file;\n    this.size = file.size;\n  }\n\n  slice(start, end) {\n    return this._file.slice(start, end);\n  }\n\n  close() {}\n}\n\nexport function getSource(input) {\n  // Since we emulate the Blob type in our tests (not all target browsers\n  // support it), we cannot use `instanceof` for testing whether the input value\n  // can be handled. Instead, we simply check is the slice() function and the\n  // size property are available.\n  if (typeof input.slice === \"function\" && typeof input.size !== \"undefined\") {\n    return new FileSource(input);\n  }\n\n  throw new Error(\"source object may only be an instance of File or Blob in this environment\");\n}\n","/* global window, localStorage */\n\nlet hasStorage = false;\ntry {\n  hasStorage = \"localStorage\" in window;\n\n  // Attempt to store and read entries from the local storage to detect Private\n  // Mode on Safari on iOS (see #49)\n  var key = \"tusSupport\";\n  localStorage.setItem(key, localStorage.getItem(key));\n\n} catch (e) {\n  // If we try to access localStorage inside a sandboxed iframe, a SecurityError\n  // is thrown. When in private mode on iOS Safari, a QuotaExceededError is\n  // thrown (see #49)\n  if (e.code === e.SECURITY_ERR || e.code === e.QUOTA_EXCEEDED_ERR) {\n    hasStorage = false;\n  } else {\n    throw e;\n  }\n}\n\nexport const canStoreURLs = hasStorage;\n\nexport function setItem(key, value) {\n  if (!hasStorage) return;\n  return localStorage.setItem(key, value);\n}\n\nexport function getItem(key) {\n  if (!hasStorage) return;\n  return localStorage.getItem(key);\n}\n\nexport function removeItem(key) {\n  if (!hasStorage) return;\n  return localStorage.removeItem(key);\n}\n","class DetailedError extends Error {\n  constructor(error, causingErr = null, xhr = null) {\n    super(error.message);\n\n    this.originalRequest = xhr;\n    this.causingError = causingErr;\n\n    let message = error.message;\n    if (causingErr != null) {\n      message += `, caused by ${causingErr.toString()}`;\n    }\n    if (xhr != null) {\n      message += `, originated from request (response code: ${xhr.status}, response text: ${xhr.responseText})`;\n    }\n    this.message = message;\n  }\n}\n\nexport default DetailedError;\n","/**\n * Generate a fingerprint for a file which will be used the store the endpoint\n *\n * @param {File} file\n * @return {String}\n */\nexport default function fingerprint(file, options) {\n  return [\n    \"tus\",\n    file.name,\n    file.type,\n    file.size,\n    file.lastModified,\n    options.endpoint\n  ].join(\"-\");\n}\n","/* global window */\nimport Upload from \"./upload\";\nimport {canStoreURLs} from \"./node/storage\";\n\nconst {defaultOptions} = Upload;\nlet isSupported;\n\nif (typeof window !== \"undefined\") {\n  // Browser environment using XMLHttpRequest\n  const {XMLHttpRequest, Blob} = window;\n\n  isSupported = (\n    XMLHttpRequest &&\n    Blob &&\n    typeof Blob.prototype.slice === \"function\"\n  );\n} else {\n  // Node.js environment using http module\n  isSupported = true;\n}\n\n// The usage of the commonjs exporting syntax instead of the new ECMAScript\n// one is actually inteded and prevents weird behaviour if we are trying to\n// import this module in another module using Babel.\nmodule.exports = {\n  Upload,\n  isSupported,\n  canStoreURLs,\n  defaultOptions\n};\n","const isReactNative = (typeof navigator !== 'undefined' && \n  typeof navigator.product === 'string' && \n  navigator.product.toLowerCase() === 'reactnative');\n\nexport default isReactNative;\n","/* global window */\nimport fingerprint from \"./fingerprint\";\nimport DetailedError from \"./error\";\nimport extend from \"extend\";\nimport isReactNative from \"./isReactNative\"\nimport uriToBlob from \"./uriToBlob\"\n\n// We import the files used inside the Node environment which are rewritten\n// for browsers using the rules defined in the package.json\nimport {newRequest, resolveUrl} from \"./node/request\";\nimport {getSource} from \"./node/source\";\nimport * as Base64 from \"./node/base64\";\nimport * as Storage from \"./node/storage\";\n\nconst defaultOptions = {\n  endpoint: null,\n  fingerprint,\n  resume: true,\n  onProgress: null,\n  onChunkComplete: null,\n  onSuccess: null,\n  onError: null,\n  headers: {},\n  chunkSize: Infinity,\n  withCredentials: false,\n  uploadUrl: null,\n  uploadSize: null,\n  overridePatchMethod: false,\n  retryDelays: null,\n  removeFingerprintOnSuccess: false\n};\n\nclass Upload {\n  constructor(file, options) {\n    this.options = extend(true, {}, defaultOptions, options);\n\n    // The underlying File/Blob object\n    this.file = file;\n\n    // The URL against which the file will be uploaded\n    this.url = null;\n\n    // The underlying XHR object for the current PATCH request\n    this._xhr = null;\n\n    // The fingerpinrt for the current file (set after start())\n    this._fingerprint = null;\n\n    // The offset used in the current PATCH request\n    this._offset = null;\n\n    // True if the current PATCH request has been aborted\n    this._aborted = false;\n\n    // The file's size in bytes\n    this._size = null;\n\n    // The Source object which will wrap around the given file and provides us\n    // with a unified interface for getting its size and slice chunks from its\n    // content allowing us to easily handle Files, Blobs, Buffers and Streams.\n    this._source = null;\n\n    // The current count of attempts which have been made. Null indicates none.\n    this._retryAttempt = 0;\n\n    // The timeout's ID which is used to delay the next retry\n    this._retryTimeout = null;\n\n    // The offset of the remote upload before the latest attempt was started.\n    this._offsetBeforeRetry = 0;\n  }\n\n  start() {\n    let file = this.file;\n\n    if (!file) {\n      this._emitError(new Error(\"tus: no file or stream to upload provided\"));\n      return;\n    }\n\n    if (!this.options.endpoint && !this.options.uploadUrl) {\n      this._emitError(new Error(\"tus: neither an endpoint or an upload URL is provided\"));\n      return;\n    }\n\n    // In React Native, when user selects a file, instead of a File or Blob, \n    // you usually get a file object {} with a uri property that contains\n    // a local path to the file. We use XMLHttpRequest to fetch \n    // the file blob, before uploading with tus.\n    if (isReactNative && \n      typeof file === 'object' && \n      file !== null) {\n      return uriToBlob(file.uri).then((blob) => {\n        return this._start(blob)\n      })\n      .catch((err) => {\n        this._emitError(new Error(\"tus: cannot fetch `file.uri` as Blob, make sure the uri is correct and accessible\"));\n        return;\n      })\n    }\n\n    return this._start(file)\n  }\n\n  _start(file) {\n    let source = this._source = getSource(file, this.options.chunkSize);\n\n    // Firstly, check if the caller has supplied a manual upload size or else\n    // we will use the calculated size by the source object.\n    if (this.options.uploadSize != null) {\n      let size = +this.options.uploadSize;\n      if (isNaN(size)) {\n        throw new Error(\"tus: cannot convert `uploadSize` option into a number\");\n      }\n\n      this._size = size;\n    } else {\n      let size = source.size;\n\n      // The size property will be null if we cannot calculate the file's size,\n      // for example if you handle a stream.\n      if (size == null) {\n        throw new Error(\"tus: cannot automatically derive upload's size from input and must be specified manually using the `uploadSize` option\");\n      }\n\n      this._size = size;\n    }\n\n    let retryDelays = this.options.retryDelays;\n    if (retryDelays != null) {\n      if (Object.prototype.toString.call(retryDelays) !== \"[object Array]\") {\n        throw new Error(\"tus: the `retryDelays` option must either be an array or null\");\n      } else {\n        let errorCallback = this.options.onError;\n        this.options.onError = (err) => {\n          // Restore the original error callback which may have been set.\n          this.options.onError = errorCallback;\n\n          // We will reset the attempt counter if\n          // - we were already able to connect to the server (offset != null) and\n          // - we were able to upload a small chunk of data to the server\n          let shouldResetDelays = this._offset != null && (this._offset > this._offsetBeforeRetry);\n          if (shouldResetDelays) {\n            this._retryAttempt = 0;\n          }\n\n          let isOnline = true;\n          if (typeof window !== \"undefined\" &&\n             \"navigator\" in window &&\n             window.navigator.onLine === false) {\n               isOnline = false;\n             }\n\n          // We only attempt a retry if\n          // - we didn't exceed the maxium number of retries, yet, and\n          // - this error was caused by a request or it's response and\n          // - the error is not a client error (status 4xx) and\n          // - the browser does not indicate that we are offline\n          let shouldRetry = this._retryAttempt < retryDelays.length &&\n                            err.originalRequest != null &&\n                            !inStatusCategory(err.originalRequest.status, 400) &&\n                            isOnline;\n\n          if (!shouldRetry) {\n            this._emitError(err);\n            return;\n          }\n\n          let delay = retryDelays[this._retryAttempt++];\n\n          this._offsetBeforeRetry = this._offset;\n          this.options.uploadUrl = this.url;\n\n          this._retryTimeout = setTimeout(() => {\n            this.start();\n          }, delay);\n        };\n      }\n    }\n\n    // Reset the aborted flag when the upload is started or else the\n    // _startUpload will stop before sending a request if the upload has been\n    // aborted previously.\n    this._aborted = false;\n\n    // The upload had been started previously and we should reuse this URL.\n    if (this.url != null) {\n      this._resumeUpload();\n      return;\n    }\n\n    // A URL has manually been specified, so we try to resume\n    if (this.options.uploadUrl != null) {\n        this.url = this.options.uploadUrl;\n        this._resumeUpload();\n        return;\n    }\n\n    // Try to find the endpoint for the file in the storage\n    if (this.options.resume) {\n        this._fingerprint = this.options.fingerprint(file, this.options);\n        let resumedUrl = Storage.getItem(this._fingerprint);\n\n        if (resumedUrl != null) {\n            this.url = resumedUrl;\n            this._resumeUpload();\n            return;\n        }\n    }\n\n    // An upload has not started for the file yet, so we start a new one\n    this._createUpload();\n  }\n\n  abort() {\n    if (this._xhr !== null) {\n      this._xhr.abort();\n      this._source.close();\n      this._aborted = true;\n    }\n\n    if (this._retryTimeout != null) {\n      clearTimeout(this._retryTimeout);\n      this._retryTimeout = null;\n    }\n  }\n\n  _emitXhrError(xhr, err, causingErr) {\n    this._emitError(new DetailedError(err, causingErr, xhr));\n  }\n\n  _emitError(err) {\n    if (typeof this.options.onError === \"function\") {\n      this.options.onError(err);\n    } else {\n      throw err;\n    }\n  }\n\n  _emitSuccess() {\n    if (typeof this.options.onSuccess === \"function\") {\n      this.options.onSuccess();\n    }\n  }\n\n  /**\n   * Publishes notification when data has been sent to the server. This\n   * data may not have been accepted by the server yet.\n   * @param  {number} bytesSent  Number of bytes sent to the server.\n   * @param  {number} bytesTotal Total number of bytes to be sent to the server.\n   */\n  _emitProgress(bytesSent, bytesTotal) {\n    if (typeof this.options.onProgress === \"function\") {\n      this.options.onProgress(bytesSent, bytesTotal);\n    }\n  }\n\n  /**\n   * Publishes notification when a chunk of data has been sent to the server\n   * and accepted by the server.\n   * @param  {number} chunkSize  Size of the chunk that was accepted by the\n   *                             server.\n   * @param  {number} bytesAccepted Total number of bytes that have been\n   *                                accepted by the server.\n   * @param  {number} bytesTotal Total number of bytes to be sent to the server.\n   */\n  _emitChunkComplete(chunkSize, bytesAccepted, bytesTotal) {\n    if (typeof this.options.onChunkComplete === \"function\") {\n      this.options.onChunkComplete(chunkSize, bytesAccepted, bytesTotal);\n    }\n  }\n\n  /**\n   * Set the headers used in the request and the withCredentials property\n   * as defined in the options\n   *\n   * @param {XMLHttpRequest} xhr\n   */\n  _setupXHR(xhr) {\n    this._xhr = xhr;\n\n    xhr.setRequestHeader(\"Tus-Resumable\", \"1.0.0\");\n    let headers = this.options.headers;\n\n    for (let name in headers) {\n      xhr.setRequestHeader(name, headers[name]);\n    }\n\n    xhr.withCredentials = this.options.withCredentials;\n  }\n\n  /**\n   * Create a new upload using the creation extension by sending a POST\n   * request to the endpoint. After successful creation the file will be\n   * uploaded\n   *\n   * @api private\n   */\n  _createUpload() {\n    if (!this.options.endpoint) {\n      this._emitError(new Error(\"tus: unable to create upload because no endpoint is provided\"));\n      return;\n    }\n\n    let xhr = newRequest();\n    xhr.open(\"POST\", this.options.endpoint, true);\n\n    xhr.onload = () => {\n      if (!inStatusCategory(xhr.status, 200)) {\n        this._emitXhrError(xhr, new Error(\"tus: unexpected response while creating upload\"));\n        return;\n      }\n\n      let location = xhr.getResponseHeader(\"Location\");\n      if (location == null) {\n        this._emitXhrError(xhr, new Error(\"tus: invalid or missing Location header\"));\n        return;\n      }\n\n      this.url = resolveUrl(this.options.endpoint, location);\n\n      if (this._size === 0) {\n        // Nothing to upload and file was successfully created\n        this._emitSuccess();\n        this._source.close();\n        return;\n      }\n\n      if (this.options.resume) {\n        Storage.setItem(this._fingerprint, this.url);\n      }\n\n      this._offset = 0;\n      this._startUpload();\n    };\n\n    xhr.onerror = (err) => {\n      this._emitXhrError(xhr, new Error(\"tus: failed to create upload\"), err);\n    };\n\n    this._setupXHR(xhr);\n    xhr.setRequestHeader(\"Upload-Length\", this._size);\n\n    // Add metadata if values have been added\n    var metadata = encodeMetadata(this.options.metadata);\n    if (metadata !== \"\") {\n        xhr.setRequestHeader(\"Upload-Metadata\", metadata);\n    }\n\n    xhr.send(null);\n  }\n\n  /*\n   * Try to resume an existing upload. First a HEAD request will be sent\n   * to retrieve the offset. If the request fails a new upload will be\n   * created. In the case of a successful response the file will be uploaded.\n   *\n   * @api private\n   */\n  _resumeUpload() {\n    let xhr = newRequest();\n    xhr.open(\"HEAD\", this.url, true);\n\n    xhr.onload = () => {\n      if (!inStatusCategory(xhr.status, 200)) {\n        if (this.options.resume && inStatusCategory(xhr.status, 400)) {\n          // Remove stored fingerprint and corresponding endpoint,\n          // on client errors since the file can not be found\n          Storage.removeItem(this._fingerprint);\n        }\n\n        // If the upload is locked (indicated by the 423 Locked status code), we\n        // emit an error instead of directly starting a new upload. This way the\n        // retry logic can catch the error and will retry the upload. An upload\n        // is usually locked for a short period of time and will be available\n        // afterwards.\n        if (xhr.status === 423) {\n          this._emitXhrError(xhr, new Error(\"tus: upload is currently locked; retry later\"));\n          return;\n        }\n\n        if (!this.options.endpoint) {\n          // Don't attempt to create a new upload if no endpoint is provided.\n          this._emitXhrError(xhr, new Error(\"tus: unable to resume upload (new upload cannot be created without an endpoint)\"));\n          return;\n        }\n\n        // Try to create a new upload\n        this.url = null;\n        this._createUpload();\n        return;\n      }\n\n      let offset = parseInt(xhr.getResponseHeader(\"Upload-Offset\"), 10);\n      if (isNaN(offset)) {\n        this._emitXhrError(xhr, new Error(\"tus: invalid or missing offset value\"));\n        return;\n      }\n\n      let length = parseInt(xhr.getResponseHeader(\"Upload-Length\"), 10);\n      if (isNaN(length)) {\n        this._emitXhrError(xhr, new Error(\"tus: invalid or missing length value\"));\n        return;\n      }\n\n      // Upload has already been completed and we do not need to send additional\n      // data to the server\n      if (offset === length) {\n        this._emitProgress(length, length);\n        this._emitSuccess();\n        return;\n      }\n\n      this._offset = offset;\n      this._startUpload();\n    };\n\n    xhr.onerror = (err) => {\n      this._emitXhrError(xhr, new Error(\"tus: failed to resume upload\"), err);\n    };\n\n    this._setupXHR(xhr);\n    xhr.send(null);\n  }\n\n  /**\n   * Start uploading the file using PATCH requests. The file will be divided\n   * into chunks as specified in the chunkSize option. During the upload\n   * the onProgress event handler may be invoked multiple times.\n   *\n   * @api private\n   */\n  _startUpload() {\n    // If the upload has been aborted, we will not send the next PATCH request.\n    // This is important if the abort method was called during a callback, such\n    // as onChunkComplete or onProgress.\n    if (this._aborted) {\n      return;\n    }\n\n    let xhr = newRequest();\n\n    // Some browser and servers may not support the PATCH method. For those\n    // cases, you can tell tus-js-client to use a POST request with the\n    // X-HTTP-Method-Override header for simulating a PATCH request.\n    if (this.options.overridePatchMethod) {\n      xhr.open(\"POST\", this.url, true);\n      xhr.setRequestHeader(\"X-HTTP-Method-Override\", \"PATCH\");\n    } else {\n      xhr.open(\"PATCH\", this.url, true);\n    }\n\n    xhr.onload = () => {\n      if (!inStatusCategory(xhr.status, 200)) {\n        this._emitXhrError(xhr, new Error(\"tus: unexpected response while uploading chunk\"));\n        return;\n      }\n\n      let offset = parseInt(xhr.getResponseHeader(\"Upload-Offset\"), 10);\n      if (isNaN(offset)) {\n        this._emitXhrError(xhr, new Error(\"tus: invalid or missing offset value\"));\n        return;\n      }\n\n      this._emitProgress(offset, this._size);\n      this._emitChunkComplete(offset - this._offset, offset, this._size);\n\n      this._offset = offset;\n\n      if (offset == this._size) {\n        if (this.options.removeFingerprintOnSuccess && this.options.resume) {\n          // Remove stored fingerprint and corresponding endpoint. This causes\n          // new upload of the same file must be treated as a different file.\n          Storage.removeItem(this._fingerprint);\n        }\n\n        // Yay, finally done :)\n        this._emitSuccess();\n        this._source.close();\n        return;\n      }\n\n      this._startUpload();\n    };\n\n    xhr.onerror = (err) => {\n      // Don't emit an error if the upload was aborted manually\n      if (this._aborted) {\n        return;\n      }\n\n      this._emitXhrError(xhr, new Error(\"tus: failed to upload chunk at offset \" + this._offset), err);\n    };\n\n    // Test support for progress events before attaching an event listener\n    if (\"upload\" in xhr) {\n      xhr.upload.onprogress = (e) => {\n        if (!e.lengthComputable) {\n          return;\n        }\n\n        this._emitProgress(start + e.loaded, this._size);\n      };\n    }\n\n    this._setupXHR(xhr);\n\n    xhr.setRequestHeader(\"Upload-Offset\", this._offset);\n    xhr.setRequestHeader(\"Content-Type\", \"application/offset+octet-stream\");\n\n    let start = this._offset;\n    let end = this._offset + this.options.chunkSize;\n\n    // The specified chunkSize may be Infinity or the calcluated end position\n    // may exceed the file's size. In both cases, we limit the end position to\n    // the input's total size for simpler calculations and correctness.\n    if (end === Infinity || end > this._size) {\n      end = this._size;\n    }\n\n    xhr.send(this._source.slice(start, end));\n\n    // Emit an progress event when a new chunk begins being uploaded.\n    this._emitProgress(this._offset, this._size);\n  }\n}\n\nfunction encodeMetadata(metadata) {\n    if (!Base64.isSupported) {\n        return \"\";\n    }\n\n    var encoded = [];\n\n    for (var key in metadata) {\n        encoded.push(key + \" \" + Base64.encode(metadata[key]));\n    }\n\n    return encoded.join(\",\");\n}\n\n/**\n * Checks whether a given status is in the range of the expected category.\n * For example, only a status between 200 and 299 will satisfy the category 200.\n *\n * @api private\n */\nfunction inStatusCategory(status, category) {\n  return (status >= category && status < (category + 100));\n}\n\nUpload.defaultOptions = defaultOptions;\n\nexport default Upload;\n","function uriToBlob (uri) {\n  return new Promise((resolve, reject) => {\n    const xhr = new XMLHttpRequest();\n    xhr.responseType = \"blob\";\n    xhr.onload = () => {\n      const blob = xhr.response;\n      resolve(blob);\n    }\n    xhr.onerror = (err) => {\n      reject(err);\n    }\n    xhr.open(\"GET\", uri);\n    xhr.send();\n  })\n}\n\nexport default uriToBlob;\n","'use strict';\n\nvar hasOwn = Object.prototype.hasOwnProperty;\nvar toStr = Object.prototype.toString;\n\nvar isArray = function isArray(arr) {\n\tif (typeof Array.isArray === 'function') {\n\t\treturn Array.isArray(arr);\n\t}\n\n\treturn toStr.call(arr) === '[object Array]';\n};\n\nvar isPlainObject = function isPlainObject(obj) {\n\tif (!obj || toStr.call(obj) !== '[object Object]') {\n\t\treturn false;\n\t}\n\n\tvar hasOwnConstructor = hasOwn.call(obj, 'constructor');\n\tvar hasIsPrototypeOf = obj.constructor && obj.constructor.prototype && hasOwn.call(obj.constructor.prototype, 'isPrototypeOf');\n\t// Not own constructor property must be Object\n\tif (obj.constructor && !hasOwnConstructor && !hasIsPrototypeOf) {\n\t\treturn false;\n\t}\n\n\t// Own properties are enumerated firstly, so to speed up,\n\t// if last one is own, then all properties are own.\n\tvar key;\n\tfor (key in obj) {/**/}\n\n\treturn typeof key === 'undefined' || hasOwn.call(obj, key);\n};\n\nmodule.exports = function extend() {\n\tvar options, name, src, copy, copyIsArray, clone,\n\t\ttarget = arguments[0],\n\t\ti = 1,\n\t\tlength = arguments.length,\n\t\tdeep = false;\n\n\t// Handle a deep copy situation\n\tif (typeof target === 'boolean') {\n\t\tdeep = target;\n\t\ttarget = arguments[1] || {};\n\t\t// skip the boolean and the target\n\t\ti = 2;\n\t} else if ((typeof target !== 'object' && typeof target !== 'function') || target == null) {\n\t\ttarget = {};\n\t}\n\n\tfor (; i < length; ++i) {\n\t\toptions = arguments[i];\n\t\t// Only deal with non-null/undefined values\n\t\tif (options != null) {\n\t\t\t// Extend the base object\n\t\t\tfor (name in options) {\n\t\t\t\tsrc = target[name];\n\t\t\t\tcopy = options[name];\n\n\t\t\t\t// Prevent never-ending loop\n\t\t\t\tif (target !== copy) {\n\t\t\t\t\t// Recurse if we're merging plain objects or arrays\n\t\t\t\t\tif (deep && copy && (isPlainObject(copy) || (copyIsArray = isArray(copy)))) {\n\t\t\t\t\t\tif (copyIsArray) {\n\t\t\t\t\t\t\tcopyIsArray = false;\n\t\t\t\t\t\t\tclone = src && isArray(src) ? src : [];\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tclone = src && isPlainObject(src) ? src : {};\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t// Never move original objects, clone them\n\t\t\t\t\t\ttarget[name] = extend(deep, clone, copy);\n\n\t\t\t\t\t// Don't bring in undefined values\n\t\t\t\t\t} else if (typeof copy !== 'undefined') {\n\t\t\t\t\t\ttarget[name] = copy;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\t// Return the modified object\n\treturn target;\n};\n\n","'use strict';\n\nvar has = Object.prototype.hasOwnProperty;\n\n/**\n * Decode a URI encoded string.\n *\n * @param {String} input The URI encoded string.\n * @returns {String} The decoded string.\n * @api private\n */\nfunction decode(input) {\n  return decodeURIComponent(input.replace(/\\+/g, ' '));\n}\n\n/**\n * Simple query string parser.\n *\n * @param {String} query The query string that needs to be parsed.\n * @returns {Object}\n * @api public\n */\nfunction querystring(query) {\n  var parser = /([^=?&]+)=?([^&]*)/g\n    , result = {}\n    , part;\n\n  while (part = parser.exec(query)) {\n    var key = decode(part[1])\n      , value = decode(part[2]);\n\n    //\n    // Prevent overriding of existing properties. This ensures that build-in\n    // methods like `toString` or __proto__ are not overriden by malicious\n    // querystrings.\n    //\n    if (key in result) continue;\n    result[key] = value;\n  }\n\n  return result;\n}\n\n/**\n * Transform a query string to an object.\n *\n * @param {Object} obj Object that should be transformed.\n * @param {String} prefix Optional prefix.\n * @returns {String}\n * @api public\n */\nfunction querystringify(obj, prefix) {\n  prefix = prefix || '';\n\n  var pairs = [];\n\n  //\n  // Optionally prefix with a '?' if needed\n  //\n  if ('string' !== typeof prefix) prefix = '?';\n\n  for (var key in obj) {\n    if (has.call(obj, key)) {\n      pairs.push(encodeURIComponent(key) +'='+ encodeURIComponent(obj[key]));\n    }\n  }\n\n  return pairs.length ? prefix + pairs.join('&') : '';\n}\n\n//\n// Expose the module.\n//\nexports.stringify = querystringify;\nexports.parse = querystring;\n","'use strict';\n\n/**\n * Check if we're required to add a port number.\n *\n * @see https://url.spec.whatwg.org/#default-port\n * @param {Number|String} port Port number we need to check\n * @param {String} protocol Protocol we need to check against.\n * @returns {Boolean} Is it a default port for the given protocol\n * @api private\n */\nmodule.exports = function required(port, protocol) {\n  protocol = protocol.split(':')[0];\n  port = +port;\n\n  if (!port) return false;\n\n  switch (protocol) {\n    case 'http':\n    case 'ws':\n    return port !== 80;\n\n    case 'https':\n    case 'wss':\n    return port !== 443;\n\n    case 'ftp':\n    return port !== 21;\n\n    case 'gopher':\n    return port !== 70;\n\n    case 'file':\n    return false;\n  }\n\n  return port !== 0;\n};\n","'use strict';\n\nvar required = require('requires-port')\n  , qs = require('querystringify')\n  , protocolre = /^([a-z][a-z0-9.+-]*:)?(\\/\\/)?([\\S\\s]*)/i\n  , slashes = /^[A-Za-z][A-Za-z0-9+-.]*:\\/\\//;\n\n/**\n * These are the parse rules for the URL parser, it informs the parser\n * about:\n *\n * 0. The char it Needs to parse, if it's a string it should be done using\n *    indexOf, RegExp using exec and NaN means set as current value.\n * 1. The property we should set when parsing this value.\n * 2. Indication if it's backwards or forward parsing, when set as number it's\n *    the value of extra chars that should be split off.\n * 3. Inherit from location if non existing in the parser.\n * 4. `toLowerCase` the resulting value.\n */\nvar rules = [\n  ['#', 'hash'],                        // Extract from the back.\n  ['?', 'query'],                       // Extract from the back.\n  function sanitize(address) {          // Sanitize what is left of the address\n    return address.replace('\\\\', '/');\n  },\n  ['/', 'pathname'],                    // Extract from the back.\n  ['@', 'auth', 1],                     // Extract from the front.\n  [NaN, 'host', undefined, 1, 1],       // Set left over value.\n  [/:(\\d+)$/, 'port', undefined, 1],    // RegExp the back.\n  [NaN, 'hostname', undefined, 1, 1]    // Set left over.\n];\n\n/**\n * These properties should not be copied or inherited from. This is only needed\n * for all non blob URL's as a blob URL does not include a hash, only the\n * origin.\n *\n * @type {Object}\n * @private\n */\nvar ignore = { hash: 1, query: 1 };\n\n/**\n * The location object differs when your code is loaded through a normal page,\n * Worker or through a worker using a blob. And with the blobble begins the\n * trouble as the location object will contain the URL of the blob, not the\n * location of the page where our code is loaded in. The actual origin is\n * encoded in the `pathname` so we can thankfully generate a good \"default\"\n * location from it so we can generate proper relative URL's again.\n *\n * @param {Object|String} loc Optional default location object.\n * @returns {Object} lolcation object.\n * @public\n */\nfunction lolcation(loc) {\n  var location = global && global.location || {};\n  loc = loc || location;\n\n  var finaldestination = {}\n    , type = typeof loc\n    , key;\n\n  if ('blob:' === loc.protocol) {\n    finaldestination = new Url(unescape(loc.pathname), {});\n  } else if ('string' === type) {\n    finaldestination = new Url(loc, {});\n    for (key in ignore) delete finaldestination[key];\n  } else if ('object' === type) {\n    for (key in loc) {\n      if (key in ignore) continue;\n      finaldestination[key] = loc[key];\n    }\n\n    if (finaldestination.slashes === undefined) {\n      finaldestination.slashes = slashes.test(loc.href);\n    }\n  }\n\n  return finaldestination;\n}\n\n/**\n * @typedef ProtocolExtract\n * @type Object\n * @property {String} protocol Protocol matched in the URL, in lowercase.\n * @property {Boolean} slashes `true` if protocol is followed by \"//\", else `false`.\n * @property {String} rest Rest of the URL that is not part of the protocol.\n */\n\n/**\n * Extract protocol information from a URL with/without double slash (\"//\").\n *\n * @param {String} address URL we want to extract from.\n * @return {ProtocolExtract} Extracted information.\n * @private\n */\nfunction extractProtocol(address) {\n  var match = protocolre.exec(address);\n\n  return {\n    protocol: match[1] ? match[1].toLowerCase() : '',\n    slashes: !!match[2],\n    rest: match[3]\n  };\n}\n\n/**\n * Resolve a relative URL pathname against a base URL pathname.\n *\n * @param {String} relative Pathname of the relative URL.\n * @param {String} base Pathname of the base URL.\n * @return {String} Resolved pathname.\n * @private\n */\nfunction resolve(relative, base) {\n  var path = (base || '/').split('/').slice(0, -1).concat(relative.split('/'))\n    , i = path.length\n    , last = path[i - 1]\n    , unshift = false\n    , up = 0;\n\n  while (i--) {\n    if (path[i] === '.') {\n      path.splice(i, 1);\n    } else if (path[i] === '..') {\n      path.splice(i, 1);\n      up++;\n    } else if (up) {\n      if (i === 0) unshift = true;\n      path.splice(i, 1);\n      up--;\n    }\n  }\n\n  if (unshift) path.unshift('');\n  if (last === '.' || last === '..') path.push('');\n\n  return path.join('/');\n}\n\n/**\n * The actual URL instance. Instead of returning an object we've opted-in to\n * create an actual constructor as it's much more memory efficient and\n * faster and it pleases my OCD.\n *\n * It is worth noting that we should not use `URL` as class name to prevent\n * clashes with the global URL instance that got introduced in browsers.\n *\n * @constructor\n * @param {String} address URL we want to parse.\n * @param {Object|String} location Location defaults for relative paths.\n * @param {Boolean|Function} parser Parser for the query string.\n * @private\n */\nfunction Url(address, location, parser) {\n  if (!(this instanceof Url)) {\n    return new Url(address, location, parser);\n  }\n\n  var relative, extracted, parse, instruction, index, key\n    , instructions = rules.slice()\n    , type = typeof location\n    , url = this\n    , i = 0;\n\n  //\n  // The following if statements allows this module two have compatibility with\n  // 2 different API:\n  //\n  // 1. Node.js's `url.parse` api which accepts a URL, boolean as arguments\n  //    where the boolean indicates that the query string should also be parsed.\n  //\n  // 2. The `URL` interface of the browser which accepts a URL, object as\n  //    arguments. The supplied object will be used as default values / fall-back\n  //    for relative paths.\n  //\n  if ('object' !== type && 'string' !== type) {\n    parser = location;\n    location = null;\n  }\n\n  if (parser && 'function' !== typeof parser) parser = qs.parse;\n\n  location = lolcation(location);\n\n  //\n  // Extract protocol information before running the instructions.\n  //\n  extracted = extractProtocol(address || '');\n  relative = !extracted.protocol && !extracted.slashes;\n  url.slashes = extracted.slashes || relative && location.slashes;\n  url.protocol = extracted.protocol || location.protocol || '';\n  address = extracted.rest;\n\n  //\n  // When the authority component is absent the URL starts with a path\n  // component.\n  //\n  if (!extracted.slashes) instructions[3] = [/(.*)/, 'pathname'];\n\n  for (; i < instructions.length; i++) {\n    instruction = instructions[i];\n\n    if (typeof instruction === 'function') {\n      address = instruction(address);\n      continue;\n    }\n\n    parse = instruction[0];\n    key = instruction[1];\n\n    if (parse !== parse) {\n      url[key] = address;\n    } else if ('string' === typeof parse) {\n      if (~(index = address.indexOf(parse))) {\n        if ('number' === typeof instruction[2]) {\n          url[key] = address.slice(0, index);\n          address = address.slice(index + instruction[2]);\n        } else {\n          url[key] = address.slice(index);\n          address = address.slice(0, index);\n        }\n      }\n    } else if ((index = parse.exec(address))) {\n      url[key] = index[1];\n      address = address.slice(0, index.index);\n    }\n\n    url[key] = url[key] || (\n      relative && instruction[3] ? location[key] || '' : ''\n    );\n\n    //\n    // Hostname, host and protocol should be lowercased so they can be used to\n    // create a proper `origin`.\n    //\n    if (instruction[4]) url[key] = url[key].toLowerCase();\n  }\n\n  //\n  // Also parse the supplied query string in to an object. If we're supplied\n  // with a custom parser as function use that instead of the default build-in\n  // parser.\n  //\n  if (parser) url.query = parser(url.query);\n\n  //\n  // If the URL is relative, resolve the pathname against the base URL.\n  //\n  if (\n      relative\n    && location.slashes\n    && url.pathname.charAt(0) !== '/'\n    && (url.pathname !== '' || location.pathname !== '')\n  ) {\n    url.pathname = resolve(url.pathname, location.pathname);\n  }\n\n  //\n  // We should not add port numbers if they are already the default port number\n  // for a given protocol. As the host also contains the port number we're going\n  // override it with the hostname which contains no port number.\n  //\n  if (!required(url.port, url.protocol)) {\n    url.host = url.hostname;\n    url.port = '';\n  }\n\n  //\n  // Parse down the `auth` for the username and password.\n  //\n  url.username = url.password = '';\n  if (url.auth) {\n    instruction = url.auth.split(':');\n    url.username = instruction[0] || '';\n    url.password = instruction[1] || '';\n  }\n\n  url.origin = url.protocol && url.host && url.protocol !== 'file:'\n    ? url.protocol +'//'+ url.host\n    : 'null';\n\n  //\n  // The href is just the compiled result.\n  //\n  url.href = url.toString();\n}\n\n/**\n * This is convenience method for changing properties in the URL instance to\n * insure that they all propagate correctly.\n *\n * @param {String} part          Property we need to adjust.\n * @param {Mixed} value          The newly assigned value.\n * @param {Boolean|Function} fn  When setting the query, it will be the function\n *                               used to parse the query.\n *                               When setting the protocol, double slash will be\n *                               removed from the final url if it is true.\n * @returns {URL} URL instance for chaining.\n * @public\n */\nfunction set(part, value, fn) {\n  var url = this;\n\n  switch (part) {\n    case 'query':\n      if ('string' === typeof value && value.length) {\n        value = (fn || qs.parse)(value);\n      }\n\n      url[part] = value;\n      break;\n\n    case 'port':\n      url[part] = value;\n\n      if (!required(value, url.protocol)) {\n        url.host = url.hostname;\n        url[part] = '';\n      } else if (value) {\n        url.host = url.hostname +':'+ value;\n      }\n\n      break;\n\n    case 'hostname':\n      url[part] = value;\n\n      if (url.port) value += ':'+ url.port;\n      url.host = value;\n      break;\n\n    case 'host':\n      url[part] = value;\n\n      if (/:\\d+$/.test(value)) {\n        value = value.split(':');\n        url.port = value.pop();\n        url.hostname = value.join(':');\n      } else {\n        url.hostname = value;\n        url.port = '';\n      }\n\n      break;\n\n    case 'protocol':\n      url.protocol = value.toLowerCase();\n      url.slashes = !fn;\n      break;\n\n    case 'pathname':\n    case 'hash':\n      if (value) {\n        var char = part === 'pathname' ? '/' : '#';\n        url[part] = value.charAt(0) !== char ? char + value : value;\n      } else {\n        url[part] = value;\n      }\n      break;\n\n    default:\n      url[part] = value;\n  }\n\n  for (var i = 0; i < rules.length; i++) {\n    var ins = rules[i];\n\n    if (ins[4]) url[ins[1]] = url[ins[1]].toLowerCase();\n  }\n\n  url.origin = url.protocol && url.host && url.protocol !== 'file:'\n    ? url.protocol +'//'+ url.host\n    : 'null';\n\n  url.href = url.toString();\n\n  return url;\n}\n\n/**\n * Transform the properties back in to a valid and full URL string.\n *\n * @param {Function} stringify Optional query stringify function.\n * @returns {String} Compiled version of the URL.\n * @public\n */\nfunction toString(stringify) {\n  if (!stringify || 'function' !== typeof stringify) stringify = qs.stringify;\n\n  var query\n    , url = this\n    , protocol = url.protocol;\n\n  if (protocol && protocol.charAt(protocol.length - 1) !== ':') protocol += ':';\n\n  var result = protocol + (url.slashes ? '//' : '');\n\n  if (url.username) {\n    result += url.username;\n    if (url.password) result += ':'+ url.password;\n    result += '@';\n  }\n\n  result += url.host + url.pathname;\n\n  query = 'object' === typeof url.query ? stringify(url.query) : url.query;\n  if (query) result += '?' !== query.charAt(0) ? '?'+ query : query;\n\n  if (url.hash) result += url.hash;\n\n  return result;\n}\n\nUrl.prototype = { set: set, toString: toString };\n\n//\n// Expose the URL parser and some additional properties that might be useful for\n// others or testing.\n//\nUrl.extractProtocol = extractProtocol;\nUrl.location = lolcation;\nUrl.qs = qs;\n\nmodule.exports = Url;\n"]}