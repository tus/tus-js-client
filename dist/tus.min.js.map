{"version":3,"sources":["node_modules/browserify/node_modules/browser-pack/_prelude.js","lib/browser/isReactNative.js","lib/browser/request.js","lib/browser/source.js","lib/browser/storage.js","lib/browser/uriToBlob.js","lib/error.js","lib/fingerprint.js","lib/index.js","lib/upload.js","node_modules/extend/index.js","node_modules/js-base64/base64.js","node_modules/querystringify/index.js","node_modules/requires-port/index.js","node_modules/url-parse/index.js"],"names":["f","exports","module","define","amd","g","window","global","self","this","tus","e","t","n","r","s","o","u","a","require","i","Error","code","l","call","length","1","_dereq_","isReactNative","navigator","product","toLowerCase","newRequest","resolveUrl","XMLHttpRequest","origin","link","_urlParse2","default","toString","getSource","FileSource","file","_classCallCheck","_file","size","start","end","slice","input","chunkSize","callback","_isReactNative2","__tus__forceReactNative","uri","_uriToBlob2","err","blob","setItem","getItem","removeItem","hasStorage","key","localStorage","SECURITY_ERR","QUOTA_EXCEEDED_ERR","canStoreURLs","value","uriToBlob","done","xhr","responseType","onload","response","onerror","open","send","DetailedError","error","causingErr","arguments","undefined","_this","_possibleConstructorReturn","Object","getPrototypeOf","message","originalRequest","causingError","status","responseText","fingerprint","options","name","type","lastModified","endpoint","join","defaultOptions","isSupported","_window","Blob","prototype","Upload","_upload2","_storage","Storage","_fingerprint2","resume","onProgress","onChunkComplete","onSuccess","onError","headers","Infinity","withCredentials","uploadUrl","uploadSize","overridePatchMethod","retryDelays","removeFingerprintOnSuccess","_extend2","url","_xhr","_fingerprint","_offset","_aborted","_size","_source","_retryAttempt","_retryTimeout","_offsetBeforeRetry","_emitError","source","_start","_this2","isNaN","errorCallback","shouldResetDelays","isOnline","onLine","shouldRetry","inStatusCategory","delay","setTimeout","_resumeUpload","resumedUrl","_createUpload","abort","close","clearTimeout","_error2","bytesSent","bytesTotal","bytesAccepted","setRequestHeader","_this3","_request","_emitXhrError","location","getResponseHeader","_emitSuccess","_startUpload","_setupXHR","metadata","encodeMetadata","_this4","offset","parseInt","_emitProgress","_this5","_emitChunkComplete","upload","onprogress","lengthComputable","loaded","encoded","push","_jsBase","Base64","encode","category","hasOwn","hasOwnProperty","toStr","isArray","arr","Array","isPlainObject","obj","hasOwnConstructor","hasIsPrototypeOf","constructor","extend","src","copy","copyIsArray","clone","target","deep","factory","_Base64","version","buffer","eval","b64chars","b64tab","bin","charAt","fromCharCode","String","cb_utob","c","cc","charCodeAt","re_utob","utob","replace","cb_encode","ccc","padlen","ord","chars","btoa","b","_encode","from","Uint8Array","urisafe","m0","encodeURI","re_btou","RegExp","cb_btou","cccc","cp","btou","cb_decode","len","atob","_decode","decode","noConflict","VERSION","fromBase64","toBase64","__buffer__","defineProperty","noEnum","v","enumerable","writable","configurable","extendString","has","decodeURIComponent","querystring","query","parser","result","part","exec","querystringify","prefix","pairs","encodeURIComponent","stringify","parse","required","port","protocol","split","qs","protocolre","slashes","rules","sanitize","address","NaN","ignore","hash","lolcation","loc","finaldestination","Url","unescape","pathname","test","href","extractProtocol","match","rest","resolve","relative","base","path","concat","last","unshift","up","splice","extracted","instruction","index","instructions","indexOf","host","hostname","username","password","auth","set","fn","pop","char","ins"],"mappings":"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":"generated.js","sourceRoot":"","sourcesContent":["(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})","const isReactNative = (typeof navigator !== \"undefined\" && \n  typeof navigator.product === \"string\" && \n  navigator.product.toLowerCase() === \"reactnative\");\n\nexport default isReactNative;\n","/* global window */\nimport URL from \"url-parse\";\n\nexport function newRequest() {\n  return new window.XMLHttpRequest();\n}\n\nexport function resolveUrl(origin, link) {\n  return new URL(link, origin).toString();\n}\n","import isReactNative from \"./isReactNative\";\nimport uriToBlob from \"./uriToBlob\";\n\nclass FileSource {\n  constructor(file) {\n    this._file = file;\n    this.size = file.size;\n  }\n\n  slice(start, end) {\n    return this._file.slice(start, end);\n  }\n\n  close() {}\n}\n\nexport function getSource(input, chunkSize, callback) {\n  // In React Native, when user selects a file, instead of a File or Blob, \n  // you usually get a file object {} with a uri property that contains\n  // a local path to the file. We use XMLHttpRequest to fetch \n  // the file blob, before uploading with tus.\n  // TODO: The __tus__forceReactNative property is currently used to force\n  // a React Native environment during testing. This should be removed\n  // once we move away from PhantomJS and can overwrite navigator.product\n  // properly.\n  if ((isReactNative || window.__tus__forceReactNative) && input && typeof input.uri !== \"undefined\") {\n    uriToBlob(input.uri, (err, blob) => {\n      if (err) {\n        return callback(new Error(\"tus: cannot fetch `file.uri` as Blob, make sure the uri is correct and accessible. \" + err));\n      }\n      callback(null, new FileSource(blob));\n    });\n    return;\n  }\n\n  // Since we emulate the Blob type in our tests (not all target browsers\n  // support it), we cannot use `instanceof` for testing whether the input value\n  // can be handled. Instead, we simply check is the slice() function and the\n  // size property are available.\n  if (typeof input.slice === \"function\" && typeof input.size !== \"undefined\") {\n    callback(null, new FileSource(input));\n    return;\n  }\n\n  callback(new Error(\"source object may only be an instance of File or Blob in this environment\"));\n}\n","/* global window, localStorage */\n\nlet hasStorage = false;\ntry {\n  hasStorage = \"localStorage\" in window;\n\n  // Attempt to store and read entries from the local storage to detect Private\n  // Mode on Safari on iOS (see #49)\n  var key = \"tusSupport\";\n  localStorage.setItem(key, localStorage.getItem(key));\n\n} catch (e) {\n  // If we try to access localStorage inside a sandboxed iframe, a SecurityError\n  // is thrown. When in private mode on iOS Safari, a QuotaExceededError is\n  // thrown (see #49)\n  if (e.code === e.SECURITY_ERR || e.code === e.QUOTA_EXCEEDED_ERR) {\n    hasStorage = false;\n  } else {\n    throw e;\n  }\n}\n\nexport const canStoreURLs = hasStorage;\n\nexport function setItem(key, value) {\n  if (!hasStorage) return;\n  return localStorage.setItem(key, value);\n}\n\nexport function getItem(key) {\n  if (!hasStorage) return;\n  return localStorage.getItem(key);\n}\n\nexport function removeItem(key) {\n  if (!hasStorage) return;\n  return localStorage.removeItem(key);\n}\n","/**\n * uriToBlob resolves a URI to a Blob object. This is used for\n * React Native to retrieve a file (identified by a file://\n * URI) as a blob.\n */\nfunction uriToBlob(uri, done) {\n  const xhr = new XMLHttpRequest();\n  xhr.responseType = \"blob\";\n  xhr.onload = () => {\n    const blob = xhr.response;\n    done(null, blob);\n  };\n  xhr.onerror = (err) => {\n    done(err);\n  };\n  xhr.open(\"GET\", uri);\n  xhr.send();\n}\n\nexport default uriToBlob;\n","class DetailedError extends Error {\n  constructor(error, causingErr = null, xhr = null) {\n    super(error.message);\n\n    this.originalRequest = xhr;\n    this.causingError = causingErr;\n\n    let message = error.message;\n    if (causingErr != null) {\n      message += `, caused by ${causingErr.toString()}`;\n    }\n    if (xhr != null) {\n      message += `, originated from request (response code: ${xhr.status}, response text: ${xhr.responseText})`;\n    }\n    this.message = message;\n  }\n}\n\nexport default DetailedError;\n","/**\n * Generate a fingerprint for a file which will be used the store the endpoint\n *\n * @param {File} file\n * @return {String}\n */\nexport default function fingerprint(file, options) {\n  return [\n    \"tus\",\n    file.name,\n    file.type,\n    file.size,\n    file.lastModified,\n    options.endpoint\n  ].join(\"-\");\n}\n","/* global window */\nimport Upload from \"./upload\";\nimport {canStoreURLs} from \"./node/storage\";\n\nconst {defaultOptions} = Upload;\nlet isSupported;\n\nif (typeof window !== \"undefined\") {\n  // Browser environment using XMLHttpRequest\n  const {XMLHttpRequest, Blob} = window;\n\n  isSupported = (\n    XMLHttpRequest &&\n    Blob &&\n    typeof Blob.prototype.slice === \"function\"\n  );\n} else {\n  // Node.js environment using http module\n  isSupported = true;\n}\n\n// The usage of the commonjs exporting syntax instead of the new ECMAScript\n// one is actually inteded and prevents weird behaviour if we are trying to\n// import this module in another module using Babel.\nmodule.exports = {\n  Upload,\n  isSupported,\n  canStoreURLs,\n  defaultOptions\n};\n","/* global window */\nimport fingerprint from \"./fingerprint\";\nimport DetailedError from \"./error\";\nimport extend from \"extend\";\nimport { Base64 } from \"js-base64\";\n\n// We import the files used inside the Node environment which are rewritten\n// for browsers using the rules defined in the package.json\nimport {newRequest, resolveUrl} from \"./node/request\";\nimport {getSource} from \"./node/source\";\nimport * as Storage from \"./node/storage\";\n\nconst defaultOptions = {\n  endpoint: null,\n  fingerprint,\n  resume: true,\n  onProgress: null,\n  onChunkComplete: null,\n  onSuccess: null,\n  onError: null,\n  headers: {},\n  chunkSize: Infinity,\n  withCredentials: false,\n  uploadUrl: null,\n  uploadSize: null,\n  overridePatchMethod: false,\n  retryDelays: null,\n  removeFingerprintOnSuccess: false\n};\n\nclass Upload {\n  constructor(file, options) {\n    this.options = extend(true, {}, defaultOptions, options);\n\n    // The underlying File/Blob object\n    this.file = file;\n\n    // The URL against which the file will be uploaded\n    this.url = null;\n\n    // The underlying XHR object for the current PATCH request\n    this._xhr = null;\n\n    // The fingerpinrt for the current file (set after start())\n    this._fingerprint = null;\n\n    // The offset used in the current PATCH request\n    this._offset = null;\n\n    // True if the current PATCH request has been aborted\n    this._aborted = false;\n\n    // The file's size in bytes\n    this._size = null;\n\n    // The Source object which will wrap around the given file and provides us\n    // with a unified interface for getting its size and slice chunks from its\n    // content allowing us to easily handle Files, Blobs, Buffers and Streams.\n    this._source = null;\n\n    // The current count of attempts which have been made. Null indicates none.\n    this._retryAttempt = 0;\n\n    // The timeout's ID which is used to delay the next retry\n    this._retryTimeout = null;\n\n    // The offset of the remote upload before the latest attempt was started.\n    this._offsetBeforeRetry = 0;\n  }\n\n  start() {\n    let file = this.file;\n\n    if (!file) {\n      this._emitError(new Error(\"tus: no file or stream to upload provided\"));\n      return;\n    }\n\n    if (!this.options.endpoint && !this.options.uploadUrl) {\n      this._emitError(new Error(\"tus: neither an endpoint or an upload URL is provided\"));\n      return;\n    }\n\n    getSource(file, this.options.chunkSize, (err, source) => {\n      if (err) {\n        this._emitError(err);\n        return;\n      }\n\n      this._source = source;\n      this._start(source);\n    });\n  }\n\n  _start(source) {\n    let file = this.file;\n\n    // Firstly, check if the caller has supplied a manual upload size or else\n    // we will use the calculated size by the source object.\n    if (this.options.uploadSize != null) {\n      let size = +this.options.uploadSize;\n      if (isNaN(size)) {\n        this._emitError(new Error(\"tus: cannot convert `uploadSize` option into a number\"));\n        return;\n      }\n\n      this._size = size;\n    } else {\n      let size = source.size;\n\n      // The size property will be null if we cannot calculate the file's size,\n      // for example if you handle a stream.\n      if (size == null) {\n        this._emitError(new Error(\"tus: cannot automatically derive upload's size from input and must be specified manually using the `uploadSize` option\"));\n        return;\n      }\n\n      this._size = size;\n    }\n\n    let retryDelays = this.options.retryDelays;\n    if (retryDelays != null) {\n      if (Object.prototype.toString.call(retryDelays) !== \"[object Array]\") {\n        this._emitError(new Error(\"tus: the `retryDelays` option must either be an array or null\"));\n        return;\n      } else {\n        let errorCallback = this.options.onError;\n        this.options.onError = (err) => {\n          // Restore the original error callback which may have been set.\n          this.options.onError = errorCallback;\n\n          // We will reset the attempt counter if\n          // - we were already able to connect to the server (offset != null) and\n          // - we were able to upload a small chunk of data to the server\n          let shouldResetDelays = this._offset != null && (this._offset > this._offsetBeforeRetry);\n          if (shouldResetDelays) {\n            this._retryAttempt = 0;\n          }\n\n          let isOnline = true;\n          if (typeof window !== \"undefined\" &&\n             \"navigator\" in window &&\n             window.navigator.onLine === false) {\n               isOnline = false;\n             }\n\n          // We only attempt a retry if\n          // - we didn't exceed the maxium number of retries, yet, and\n          // - this error was caused by a request or it's response and\n          // - the error is not a client error (status 4xx) and\n          // - the browser does not indicate that we are offline\n          let shouldRetry = this._retryAttempt < retryDelays.length &&\n                            err.originalRequest != null &&\n                            !inStatusCategory(err.originalRequest.status, 400) &&\n                            isOnline;\n\n          if (!shouldRetry) {\n            this._emitError(err);\n            return;\n          }\n\n          let delay = retryDelays[this._retryAttempt++];\n\n          this._offsetBeforeRetry = this._offset;\n          this.options.uploadUrl = this.url;\n\n          this._retryTimeout = setTimeout(() => {\n            this.start();\n          }, delay);\n        };\n      }\n    }\n\n    // Reset the aborted flag when the upload is started or else the\n    // _startUpload will stop before sending a request if the upload has been\n    // aborted previously.\n    this._aborted = false;\n\n    // The upload had been started previously and we should reuse this URL.\n    if (this.url != null) {\n      this._resumeUpload();\n      return;\n    }\n\n    // A URL has manually been specified, so we try to resume\n    if (this.options.uploadUrl != null) {\n        this.url = this.options.uploadUrl;\n        this._resumeUpload();\n        return;\n    }\n\n    // Try to find the endpoint for the file in the storage\n    if (this.options.resume) {\n        this._fingerprint = this.options.fingerprint(file, this.options);\n        let resumedUrl = Storage.getItem(this._fingerprint);\n\n        if (resumedUrl != null) {\n            this.url = resumedUrl;\n            this._resumeUpload();\n            return;\n        }\n    }\n\n    // An upload has not started for the file yet, so we start a new one\n    this._createUpload();\n  }\n\n  abort() {\n    if (this._xhr !== null) {\n      this._xhr.abort();\n      this._source.close();\n      this._aborted = true;\n    }\n\n    if (this._retryTimeout != null) {\n      clearTimeout(this._retryTimeout);\n      this._retryTimeout = null;\n    }\n  }\n\n  _emitXhrError(xhr, err, causingErr) {\n    this._emitError(new DetailedError(err, causingErr, xhr));\n  }\n\n  _emitError(err) {\n    if (typeof this.options.onError === \"function\") {\n      this.options.onError(err);\n    } else {\n      throw err;\n    }\n  }\n\n  _emitSuccess() {\n    if (typeof this.options.onSuccess === \"function\") {\n      this.options.onSuccess();\n    }\n  }\n\n  /**\n   * Publishes notification when data has been sent to the server. This\n   * data may not have been accepted by the server yet.\n   * @param  {number} bytesSent  Number of bytes sent to the server.\n   * @param  {number} bytesTotal Total number of bytes to be sent to the server.\n   */\n  _emitProgress(bytesSent, bytesTotal) {\n    if (typeof this.options.onProgress === \"function\") {\n      this.options.onProgress(bytesSent, bytesTotal);\n    }\n  }\n\n  /**\n   * Publishes notification when a chunk of data has been sent to the server\n   * and accepted by the server.\n   * @param  {number} chunkSize  Size of the chunk that was accepted by the\n   *                             server.\n   * @param  {number} bytesAccepted Total number of bytes that have been\n   *                                accepted by the server.\n   * @param  {number} bytesTotal Total number of bytes to be sent to the server.\n   */\n  _emitChunkComplete(chunkSize, bytesAccepted, bytesTotal) {\n    if (typeof this.options.onChunkComplete === \"function\") {\n      this.options.onChunkComplete(chunkSize, bytesAccepted, bytesTotal);\n    }\n  }\n\n  /**\n   * Set the headers used in the request and the withCredentials property\n   * as defined in the options\n   *\n   * @param {XMLHttpRequest} xhr\n   */\n  _setupXHR(xhr) {\n    this._xhr = xhr;\n\n    xhr.setRequestHeader(\"Tus-Resumable\", \"1.0.0\");\n    let headers = this.options.headers;\n\n    for (let name in headers) {\n      xhr.setRequestHeader(name, headers[name]);\n    }\n\n    xhr.withCredentials = this.options.withCredentials;\n  }\n\n  /**\n   * Create a new upload using the creation extension by sending a POST\n   * request to the endpoint. After successful creation the file will be\n   * uploaded\n   *\n   * @api private\n   */\n  _createUpload() {\n    if (!this.options.endpoint) {\n      this._emitError(new Error(\"tus: unable to create upload because no endpoint is provided\"));\n      return;\n    }\n\n    let xhr = newRequest();\n    xhr.open(\"POST\", this.options.endpoint, true);\n\n    xhr.onload = () => {\n      if (!inStatusCategory(xhr.status, 200)) {\n        this._emitXhrError(xhr, new Error(\"tus: unexpected response while creating upload\"));\n        return;\n      }\n\n      let location = xhr.getResponseHeader(\"Location\");\n      if (location == null) {\n        this._emitXhrError(xhr, new Error(\"tus: invalid or missing Location header\"));\n        return;\n      }\n\n      this.url = resolveUrl(this.options.endpoint, location);\n\n      if (this._size === 0) {\n        // Nothing to upload and file was successfully created\n        this._emitSuccess();\n        this._source.close();\n        return;\n      }\n\n      if (this.options.resume) {\n        Storage.setItem(this._fingerprint, this.url);\n      }\n\n      this._offset = 0;\n      this._startUpload();\n    };\n\n    xhr.onerror = (err) => {\n      this._emitXhrError(xhr, new Error(\"tus: failed to create upload\"), err);\n    };\n\n    this._setupXHR(xhr);\n    xhr.setRequestHeader(\"Upload-Length\", this._size);\n\n    // Add metadata if values have been added\n    var metadata = encodeMetadata(this.options.metadata);\n    if (metadata !== \"\") {\n        xhr.setRequestHeader(\"Upload-Metadata\", metadata);\n    }\n\n    xhr.send(null);\n  }\n\n  /*\n   * Try to resume an existing upload. First a HEAD request will be sent\n   * to retrieve the offset. If the request fails a new upload will be\n   * created. In the case of a successful response the file will be uploaded.\n   *\n   * @api private\n   */\n  _resumeUpload() {\n    let xhr = newRequest();\n    xhr.open(\"HEAD\", this.url, true);\n\n    xhr.onload = () => {\n      if (!inStatusCategory(xhr.status, 200)) {\n        if (this.options.resume && inStatusCategory(xhr.status, 400)) {\n          // Remove stored fingerprint and corresponding endpoint,\n          // on client errors since the file can not be found\n          Storage.removeItem(this._fingerprint);\n        }\n\n        // If the upload is locked (indicated by the 423 Locked status code), we\n        // emit an error instead of directly starting a new upload. This way the\n        // retry logic can catch the error and will retry the upload. An upload\n        // is usually locked for a short period of time and will be available\n        // afterwards.\n        if (xhr.status === 423) {\n          this._emitXhrError(xhr, new Error(\"tus: upload is currently locked; retry later\"));\n          return;\n        }\n\n        if (!this.options.endpoint) {\n          // Don't attempt to create a new upload if no endpoint is provided.\n          this._emitXhrError(xhr, new Error(\"tus: unable to resume upload (new upload cannot be created without an endpoint)\"));\n          return;\n        }\n\n        // Try to create a new upload\n        this.url = null;\n        this._createUpload();\n        return;\n      }\n\n      let offset = parseInt(xhr.getResponseHeader(\"Upload-Offset\"), 10);\n      if (isNaN(offset)) {\n        this._emitXhrError(xhr, new Error(\"tus: invalid or missing offset value\"));\n        return;\n      }\n\n      let length = parseInt(xhr.getResponseHeader(\"Upload-Length\"), 10);\n      if (isNaN(length)) {\n        this._emitXhrError(xhr, new Error(\"tus: invalid or missing length value\"));\n        return;\n      }\n\n      // Upload has already been completed and we do not need to send additional\n      // data to the server\n      if (offset === length) {\n        this._emitProgress(length, length);\n        this._emitSuccess();\n        return;\n      }\n\n      this._offset = offset;\n      this._startUpload();\n    };\n\n    xhr.onerror = (err) => {\n      this._emitXhrError(xhr, new Error(\"tus: failed to resume upload\"), err);\n    };\n\n    this._setupXHR(xhr);\n    xhr.send(null);\n  }\n\n  /**\n   * Start uploading the file using PATCH requests. The file will be divided\n   * into chunks as specified in the chunkSize option. During the upload\n   * the onProgress event handler may be invoked multiple times.\n   *\n   * @api private\n   */\n  _startUpload() {\n    // If the upload has been aborted, we will not send the next PATCH request.\n    // This is important if the abort method was called during a callback, such\n    // as onChunkComplete or onProgress.\n    if (this._aborted) {\n      return;\n    }\n\n    let xhr = newRequest();\n\n    // Some browser and servers may not support the PATCH method. For those\n    // cases, you can tell tus-js-client to use a POST request with the\n    // X-HTTP-Method-Override header for simulating a PATCH request.\n    if (this.options.overridePatchMethod) {\n      xhr.open(\"POST\", this.url, true);\n      xhr.setRequestHeader(\"X-HTTP-Method-Override\", \"PATCH\");\n    } else {\n      xhr.open(\"PATCH\", this.url, true);\n    }\n\n    xhr.onload = () => {\n      if (!inStatusCategory(xhr.status, 200)) {\n        this._emitXhrError(xhr, new Error(\"tus: unexpected response while uploading chunk\"));\n        return;\n      }\n\n      let offset = parseInt(xhr.getResponseHeader(\"Upload-Offset\"), 10);\n      if (isNaN(offset)) {\n        this._emitXhrError(xhr, new Error(\"tus: invalid or missing offset value\"));\n        return;\n      }\n\n      this._emitProgress(offset, this._size);\n      this._emitChunkComplete(offset - this._offset, offset, this._size);\n\n      this._offset = offset;\n\n      if (offset == this._size) {\n        if (this.options.removeFingerprintOnSuccess && this.options.resume) {\n          // Remove stored fingerprint and corresponding endpoint. This causes\n          // new upload of the same file must be treated as a different file.\n          Storage.removeItem(this._fingerprint);\n        }\n\n        // Yay, finally done :)\n        this._emitSuccess();\n        this._source.close();\n        return;\n      }\n\n      this._startUpload();\n    };\n\n    xhr.onerror = (err) => {\n      // Don't emit an error if the upload was aborted manually\n      if (this._aborted) {\n        return;\n      }\n\n      this._emitXhrError(xhr, new Error(\"tus: failed to upload chunk at offset \" + this._offset), err);\n    };\n\n    // Test support for progress events before attaching an event listener\n    if (\"upload\" in xhr) {\n      xhr.upload.onprogress = (e) => {\n        if (!e.lengthComputable) {\n          return;\n        }\n\n        this._emitProgress(start + e.loaded, this._size);\n      };\n    }\n\n    this._setupXHR(xhr);\n\n    xhr.setRequestHeader(\"Upload-Offset\", this._offset);\n    xhr.setRequestHeader(\"Content-Type\", \"application/offset+octet-stream\");\n\n    let start = this._offset;\n    let end = this._offset + this.options.chunkSize;\n\n    // The specified chunkSize may be Infinity or the calcluated end position\n    // may exceed the file's size. In both cases, we limit the end position to\n    // the input's total size for simpler calculations and correctness.\n    if (end === Infinity || end > this._size) {\n      end = this._size;\n    }\n\n    xhr.send(this._source.slice(start, end));\n\n    // Emit an progress event when a new chunk begins being uploaded.\n    this._emitProgress(this._offset, this._size);\n  }\n}\n\nfunction encodeMetadata(metadata) {\n    var encoded = [];\n\n    for (var key in metadata) {\n        encoded.push(key + \" \" + Base64.encode(metadata[key]));\n    }\n\n    return encoded.join(\",\");\n}\n\n/**\n * Checks whether a given status is in the range of the expected category.\n * For example, only a status between 200 and 299 will satisfy the category 200.\n *\n * @api private\n */\nfunction inStatusCategory(status, category) {\n  return (status >= category && status < (category + 100));\n}\n\nUpload.defaultOptions = defaultOptions;\n\nexport default Upload;\n","'use strict';\n\nvar hasOwn = Object.prototype.hasOwnProperty;\nvar toStr = Object.prototype.toString;\n\nvar isArray = function isArray(arr) {\n\tif (typeof Array.isArray === 'function') {\n\t\treturn Array.isArray(arr);\n\t}\n\n\treturn toStr.call(arr) === '[object Array]';\n};\n\nvar isPlainObject = function isPlainObject(obj) {\n\tif (!obj || toStr.call(obj) !== '[object Object]') {\n\t\treturn false;\n\t}\n\n\tvar hasOwnConstructor = hasOwn.call(obj, 'constructor');\n\tvar hasIsPrototypeOf = obj.constructor && obj.constructor.prototype && hasOwn.call(obj.constructor.prototype, 'isPrototypeOf');\n\t// Not own constructor property must be Object\n\tif (obj.constructor && !hasOwnConstructor && !hasIsPrototypeOf) {\n\t\treturn false;\n\t}\n\n\t// Own properties are enumerated firstly, so to speed up,\n\t// if last one is own, then all properties are own.\n\tvar key;\n\tfor (key in obj) {/**/}\n\n\treturn typeof key === 'undefined' || hasOwn.call(obj, key);\n};\n\nmodule.exports = function extend() {\n\tvar options, name, src, copy, copyIsArray, clone,\n\t\ttarget = arguments[0],\n\t\ti = 1,\n\t\tlength = arguments.length,\n\t\tdeep = false;\n\n\t// Handle a deep copy situation\n\tif (typeof target === 'boolean') {\n\t\tdeep = target;\n\t\ttarget = arguments[1] || {};\n\t\t// skip the boolean and the target\n\t\ti = 2;\n\t} else if ((typeof target !== 'object' && typeof target !== 'function') || target == null) {\n\t\ttarget = {};\n\t}\n\n\tfor (; i < length; ++i) {\n\t\toptions = arguments[i];\n\t\t// Only deal with non-null/undefined values\n\t\tif (options != null) {\n\t\t\t// Extend the base object\n\t\t\tfor (name in options) {\n\t\t\t\tsrc = target[name];\n\t\t\t\tcopy = options[name];\n\n\t\t\t\t// Prevent never-ending loop\n\t\t\t\tif (target !== copy) {\n\t\t\t\t\t// Recurse if we're merging plain objects or arrays\n\t\t\t\t\tif (deep && copy && (isPlainObject(copy) || (copyIsArray = isArray(copy)))) {\n\t\t\t\t\t\tif (copyIsArray) {\n\t\t\t\t\t\t\tcopyIsArray = false;\n\t\t\t\t\t\t\tclone = src && isArray(src) ? src : [];\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tclone = src && isPlainObject(src) ? src : {};\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t// Never move original objects, clone them\n\t\t\t\t\t\ttarget[name] = extend(deep, clone, copy);\n\n\t\t\t\t\t// Don't bring in undefined values\n\t\t\t\t\t} else if (typeof copy !== 'undefined') {\n\t\t\t\t\t\ttarget[name] = copy;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\t// Return the modified object\n\treturn target;\n};\n\n","/*\n *  base64.js\n *\n *  Licensed under the BSD 3-Clause License.\n *    http://opensource.org/licenses/BSD-3-Clause\n *\n *  References:\n *    http://en.wikipedia.org/wiki/Base64\n */\n;(function (global, factory) {\n    typeof exports === 'object' && typeof module !== 'undefined'\n        ? module.exports = factory(global)\n        : typeof define === 'function' && define.amd\n        ? define(factory) : factory(global)\n}((\n    typeof self !== 'undefined' ? self\n        : typeof window !== 'undefined' ? window\n        : typeof global !== 'undefined' ? global\n: this\n), function(global) {\n    'use strict';\n    // existing version for noConflict()\n    var _Base64 = global.Base64;\n    var version = \"2.4.9\";\n    // if node.js and NOT React Native, we use Buffer\n    var buffer;\n    if (typeof module !== 'undefined' && module.exports) {\n        try {\n            buffer = eval(\"require('buffer').Buffer\");\n        } catch (err) {\n            buffer = undefined;\n        }\n    }\n    // constants\n    var b64chars\n        = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/';\n    var b64tab = function(bin) {\n        var t = {};\n        for (var i = 0, l = bin.length; i < l; i++) t[bin.charAt(i)] = i;\n        return t;\n    }(b64chars);\n    var fromCharCode = String.fromCharCode;\n    // encoder stuff\n    var cb_utob = function(c) {\n        if (c.length < 2) {\n            var cc = c.charCodeAt(0);\n            return cc < 0x80 ? c\n                : cc < 0x800 ? (fromCharCode(0xc0 | (cc >>> 6))\n                                + fromCharCode(0x80 | (cc & 0x3f)))\n                : (fromCharCode(0xe0 | ((cc >>> 12) & 0x0f))\n                   + fromCharCode(0x80 | ((cc >>>  6) & 0x3f))\n                   + fromCharCode(0x80 | ( cc         & 0x3f)));\n        } else {\n            var cc = 0x10000\n                + (c.charCodeAt(0) - 0xD800) * 0x400\n                + (c.charCodeAt(1) - 0xDC00);\n            return (fromCharCode(0xf0 | ((cc >>> 18) & 0x07))\n                    + fromCharCode(0x80 | ((cc >>> 12) & 0x3f))\n                    + fromCharCode(0x80 | ((cc >>>  6) & 0x3f))\n                    + fromCharCode(0x80 | ( cc         & 0x3f)));\n        }\n    };\n    var re_utob = /[\\uD800-\\uDBFF][\\uDC00-\\uDFFFF]|[^\\x00-\\x7F]/g;\n    var utob = function(u) {\n        return u.replace(re_utob, cb_utob);\n    };\n    var cb_encode = function(ccc) {\n        var padlen = [0, 2, 1][ccc.length % 3],\n        ord = ccc.charCodeAt(0) << 16\n            | ((ccc.length > 1 ? ccc.charCodeAt(1) : 0) << 8)\n            | ((ccc.length > 2 ? ccc.charCodeAt(2) : 0)),\n        chars = [\n            b64chars.charAt( ord >>> 18),\n            b64chars.charAt((ord >>> 12) & 63),\n            padlen >= 2 ? '=' : b64chars.charAt((ord >>> 6) & 63),\n            padlen >= 1 ? '=' : b64chars.charAt(ord & 63)\n        ];\n        return chars.join('');\n    };\n    var btoa = global.btoa ? function(b) {\n        return global.btoa(b);\n    } : function(b) {\n        return b.replace(/[\\s\\S]{1,3}/g, cb_encode);\n    };\n    var _encode = buffer ?\n        buffer.from && Uint8Array && buffer.from !== Uint8Array.from\n        ? function (u) {\n            return (u.constructor === buffer.constructor ? u : buffer.from(u))\n                .toString('base64')\n        }\n        :  function (u) {\n            return (u.constructor === buffer.constructor ? u : new  buffer(u))\n                .toString('base64')\n        }\n        : function (u) { return btoa(utob(u)) }\n    ;\n    var encode = function(u, urisafe) {\n        return !urisafe\n            ? _encode(String(u))\n            : _encode(String(u)).replace(/[+\\/]/g, function(m0) {\n                return m0 == '+' ? '-' : '_';\n            }).replace(/=/g, '');\n    };\n    var encodeURI = function(u) { return encode(u, true) };\n    // decoder stuff\n    var re_btou = new RegExp([\n        '[\\xC0-\\xDF][\\x80-\\xBF]',\n        '[\\xE0-\\xEF][\\x80-\\xBF]{2}',\n        '[\\xF0-\\xF7][\\x80-\\xBF]{3}'\n    ].join('|'), 'g');\n    var cb_btou = function(cccc) {\n        switch(cccc.length) {\n        case 4:\n            var cp = ((0x07 & cccc.charCodeAt(0)) << 18)\n                |    ((0x3f & cccc.charCodeAt(1)) << 12)\n                |    ((0x3f & cccc.charCodeAt(2)) <<  6)\n                |     (0x3f & cccc.charCodeAt(3)),\n            offset = cp - 0x10000;\n            return (fromCharCode((offset  >>> 10) + 0xD800)\n                    + fromCharCode((offset & 0x3FF) + 0xDC00));\n        case 3:\n            return fromCharCode(\n                ((0x0f & cccc.charCodeAt(0)) << 12)\n                    | ((0x3f & cccc.charCodeAt(1)) << 6)\n                    |  (0x3f & cccc.charCodeAt(2))\n            );\n        default:\n            return  fromCharCode(\n                ((0x1f & cccc.charCodeAt(0)) << 6)\n                    |  (0x3f & cccc.charCodeAt(1))\n            );\n        }\n    };\n    var btou = function(b) {\n        return b.replace(re_btou, cb_btou);\n    };\n    var cb_decode = function(cccc) {\n        var len = cccc.length,\n        padlen = len % 4,\n        n = (len > 0 ? b64tab[cccc.charAt(0)] << 18 : 0)\n            | (len > 1 ? b64tab[cccc.charAt(1)] << 12 : 0)\n            | (len > 2 ? b64tab[cccc.charAt(2)] <<  6 : 0)\n            | (len > 3 ? b64tab[cccc.charAt(3)]       : 0),\n        chars = [\n            fromCharCode( n >>> 16),\n            fromCharCode((n >>>  8) & 0xff),\n            fromCharCode( n         & 0xff)\n        ];\n        chars.length -= [0, 0, 2, 1][padlen];\n        return chars.join('');\n    };\n    var atob = global.atob ? function(a) {\n        return global.atob(a);\n    } : function(a){\n        return a.replace(/[\\s\\S]{1,4}/g, cb_decode);\n    };\n    var _decode = buffer ?\n        buffer.from && Uint8Array && buffer.from !== Uint8Array.from\n        ? function(a) {\n            return (a.constructor === buffer.constructor\n                    ? a : buffer.from(a, 'base64')).toString();\n        }\n        : function(a) {\n            return (a.constructor === buffer.constructor\n                    ? a : new buffer(a, 'base64')).toString();\n        }\n        : function(a) { return btou(atob(a)) };\n    var decode = function(a){\n        return _decode(\n            String(a).replace(/[-_]/g, function(m0) { return m0 == '-' ? '+' : '/' })\n                .replace(/[^A-Za-z0-9\\+\\/]/g, '')\n        );\n    };\n    var noConflict = function() {\n        var Base64 = global.Base64;\n        global.Base64 = _Base64;\n        return Base64;\n    };\n    // export Base64\n    global.Base64 = {\n        VERSION: version,\n        atob: atob,\n        btoa: btoa,\n        fromBase64: decode,\n        toBase64: encode,\n        utob: utob,\n        encode: encode,\n        encodeURI: encodeURI,\n        btou: btou,\n        decode: decode,\n        noConflict: noConflict,\n        __buffer__: buffer\n    };\n    // if ES5 is available, make Base64.extendString() available\n    if (typeof Object.defineProperty === 'function') {\n        var noEnum = function(v){\n            return {value:v,enumerable:false,writable:true,configurable:true};\n        };\n        global.Base64.extendString = function () {\n            Object.defineProperty(\n                String.prototype, 'fromBase64', noEnum(function () {\n                    return decode(this)\n                }));\n            Object.defineProperty(\n                String.prototype, 'toBase64', noEnum(function (urisafe) {\n                    return encode(this, urisafe)\n                }));\n            Object.defineProperty(\n                String.prototype, 'toBase64URI', noEnum(function () {\n                    return encode(this, true)\n                }));\n        };\n    }\n    //\n    // export Base64 to the namespace\n    //\n    if (global['Meteor']) { // Meteor.js\n        Base64 = global.Base64;\n    }\n    // module.exports and AMD are mutually exclusive.\n    // module.exports has precedence.\n    if (typeof module !== 'undefined' && module.exports) {\n        module.exports.Base64 = global.Base64;\n    }\n    else if (typeof define === 'function' && define.amd) {\n        // AMD. Register as an anonymous module.\n        define([], function(){ return global.Base64 });\n    }\n    // that's it!\n    return {Base64: global.Base64}\n}));\n","'use strict';\n\nvar has = Object.prototype.hasOwnProperty;\n\n/**\n * Decode a URI encoded string.\n *\n * @param {String} input The URI encoded string.\n * @returns {String} The decoded string.\n * @api private\n */\nfunction decode(input) {\n  return decodeURIComponent(input.replace(/\\+/g, ' '));\n}\n\n/**\n * Simple query string parser.\n *\n * @param {String} query The query string that needs to be parsed.\n * @returns {Object}\n * @api public\n */\nfunction querystring(query) {\n  var parser = /([^=?&]+)=?([^&]*)/g\n    , result = {}\n    , part;\n\n  while (part = parser.exec(query)) {\n    var key = decode(part[1])\n      , value = decode(part[2]);\n\n    //\n    // Prevent overriding of existing properties. This ensures that build-in\n    // methods like `toString` or __proto__ are not overriden by malicious\n    // querystrings.\n    //\n    if (key in result) continue;\n    result[key] = value;\n  }\n\n  return result;\n}\n\n/**\n * Transform a query string to an object.\n *\n * @param {Object} obj Object that should be transformed.\n * @param {String} prefix Optional prefix.\n * @returns {String}\n * @api public\n */\nfunction querystringify(obj, prefix) {\n  prefix = prefix || '';\n\n  var pairs = [];\n\n  //\n  // Optionally prefix with a '?' if needed\n  //\n  if ('string' !== typeof prefix) prefix = '?';\n\n  for (var key in obj) {\n    if (has.call(obj, key)) {\n      pairs.push(encodeURIComponent(key) +'='+ encodeURIComponent(obj[key]));\n    }\n  }\n\n  return pairs.length ? prefix + pairs.join('&') : '';\n}\n\n//\n// Expose the module.\n//\nexports.stringify = querystringify;\nexports.parse = querystring;\n","'use strict';\n\n/**\n * Check if we're required to add a port number.\n *\n * @see https://url.spec.whatwg.org/#default-port\n * @param {Number|String} port Port number we need to check\n * @param {String} protocol Protocol we need to check against.\n * @returns {Boolean} Is it a default port for the given protocol\n * @api private\n */\nmodule.exports = function required(port, protocol) {\n  protocol = protocol.split(':')[0];\n  port = +port;\n\n  if (!port) return false;\n\n  switch (protocol) {\n    case 'http':\n    case 'ws':\n    return port !== 80;\n\n    case 'https':\n    case 'wss':\n    return port !== 443;\n\n    case 'ftp':\n    return port !== 21;\n\n    case 'gopher':\n    return port !== 70;\n\n    case 'file':\n    return false;\n  }\n\n  return port !== 0;\n};\n","'use strict';\n\nvar required = require('requires-port')\n  , qs = require('querystringify')\n  , protocolre = /^([a-z][a-z0-9.+-]*:)?(\\/\\/)?([\\S\\s]*)/i\n  , slashes = /^[A-Za-z][A-Za-z0-9+-.]*:\\/\\//;\n\n/**\n * These are the parse rules for the URL parser, it informs the parser\n * about:\n *\n * 0. The char it Needs to parse, if it's a string it should be done using\n *    indexOf, RegExp using exec and NaN means set as current value.\n * 1. The property we should set when parsing this value.\n * 2. Indication if it's backwards or forward parsing, when set as number it's\n *    the value of extra chars that should be split off.\n * 3. Inherit from location if non existing in the parser.\n * 4. `toLowerCase` the resulting value.\n */\nvar rules = [\n  ['#', 'hash'],                        // Extract from the back.\n  ['?', 'query'],                       // Extract from the back.\n  function sanitize(address) {          // Sanitize what is left of the address\n    return address.replace('\\\\', '/');\n  },\n  ['/', 'pathname'],                    // Extract from the back.\n  ['@', 'auth', 1],                     // Extract from the front.\n  [NaN, 'host', undefined, 1, 1],       // Set left over value.\n  [/:(\\d+)$/, 'port', undefined, 1],    // RegExp the back.\n  [NaN, 'hostname', undefined, 1, 1]    // Set left over.\n];\n\n/**\n * These properties should not be copied or inherited from. This is only needed\n * for all non blob URL's as a blob URL does not include a hash, only the\n * origin.\n *\n * @type {Object}\n * @private\n */\nvar ignore = { hash: 1, query: 1 };\n\n/**\n * The location object differs when your code is loaded through a normal page,\n * Worker or through a worker using a blob. And with the blobble begins the\n * trouble as the location object will contain the URL of the blob, not the\n * location of the page where our code is loaded in. The actual origin is\n * encoded in the `pathname` so we can thankfully generate a good \"default\"\n * location from it so we can generate proper relative URL's again.\n *\n * @param {Object|String} loc Optional default location object.\n * @returns {Object} lolcation object.\n * @public\n */\nfunction lolcation(loc) {\n  var location = global && global.location || {};\n  loc = loc || location;\n\n  var finaldestination = {}\n    , type = typeof loc\n    , key;\n\n  if ('blob:' === loc.protocol) {\n    finaldestination = new Url(unescape(loc.pathname), {});\n  } else if ('string' === type) {\n    finaldestination = new Url(loc, {});\n    for (key in ignore) delete finaldestination[key];\n  } else if ('object' === type) {\n    for (key in loc) {\n      if (key in ignore) continue;\n      finaldestination[key] = loc[key];\n    }\n\n    if (finaldestination.slashes === undefined) {\n      finaldestination.slashes = slashes.test(loc.href);\n    }\n  }\n\n  return finaldestination;\n}\n\n/**\n * @typedef ProtocolExtract\n * @type Object\n * @property {String} protocol Protocol matched in the URL, in lowercase.\n * @property {Boolean} slashes `true` if protocol is followed by \"//\", else `false`.\n * @property {String} rest Rest of the URL that is not part of the protocol.\n */\n\n/**\n * Extract protocol information from a URL with/without double slash (\"//\").\n *\n * @param {String} address URL we want to extract from.\n * @return {ProtocolExtract} Extracted information.\n * @private\n */\nfunction extractProtocol(address) {\n  var match = protocolre.exec(address);\n\n  return {\n    protocol: match[1] ? match[1].toLowerCase() : '',\n    slashes: !!match[2],\n    rest: match[3]\n  };\n}\n\n/**\n * Resolve a relative URL pathname against a base URL pathname.\n *\n * @param {String} relative Pathname of the relative URL.\n * @param {String} base Pathname of the base URL.\n * @return {String} Resolved pathname.\n * @private\n */\nfunction resolve(relative, base) {\n  var path = (base || '/').split('/').slice(0, -1).concat(relative.split('/'))\n    , i = path.length\n    , last = path[i - 1]\n    , unshift = false\n    , up = 0;\n\n  while (i--) {\n    if (path[i] === '.') {\n      path.splice(i, 1);\n    } else if (path[i] === '..') {\n      path.splice(i, 1);\n      up++;\n    } else if (up) {\n      if (i === 0) unshift = true;\n      path.splice(i, 1);\n      up--;\n    }\n  }\n\n  if (unshift) path.unshift('');\n  if (last === '.' || last === '..') path.push('');\n\n  return path.join('/');\n}\n\n/**\n * The actual URL instance. Instead of returning an object we've opted-in to\n * create an actual constructor as it's much more memory efficient and\n * faster and it pleases my OCD.\n *\n * It is worth noting that we should not use `URL` as class name to prevent\n * clashes with the global URL instance that got introduced in browsers.\n *\n * @constructor\n * @param {String} address URL we want to parse.\n * @param {Object|String} location Location defaults for relative paths.\n * @param {Boolean|Function} parser Parser for the query string.\n * @private\n */\nfunction Url(address, location, parser) {\n  if (!(this instanceof Url)) {\n    return new Url(address, location, parser);\n  }\n\n  var relative, extracted, parse, instruction, index, key\n    , instructions = rules.slice()\n    , type = typeof location\n    , url = this\n    , i = 0;\n\n  //\n  // The following if statements allows this module two have compatibility with\n  // 2 different API:\n  //\n  // 1. Node.js's `url.parse` api which accepts a URL, boolean as arguments\n  //    where the boolean indicates that the query string should also be parsed.\n  //\n  // 2. The `URL` interface of the browser which accepts a URL, object as\n  //    arguments. The supplied object will be used as default values / fall-back\n  //    for relative paths.\n  //\n  if ('object' !== type && 'string' !== type) {\n    parser = location;\n    location = null;\n  }\n\n  if (parser && 'function' !== typeof parser) parser = qs.parse;\n\n  location = lolcation(location);\n\n  //\n  // Extract protocol information before running the instructions.\n  //\n  extracted = extractProtocol(address || '');\n  relative = !extracted.protocol && !extracted.slashes;\n  url.slashes = extracted.slashes || relative && location.slashes;\n  url.protocol = extracted.protocol || location.protocol || '';\n  address = extracted.rest;\n\n  //\n  // When the authority component is absent the URL starts with a path\n  // component.\n  //\n  if (!extracted.slashes) instructions[3] = [/(.*)/, 'pathname'];\n\n  for (; i < instructions.length; i++) {\n    instruction = instructions[i];\n\n    if (typeof instruction === 'function') {\n      address = instruction(address);\n      continue;\n    }\n\n    parse = instruction[0];\n    key = instruction[1];\n\n    if (parse !== parse) {\n      url[key] = address;\n    } else if ('string' === typeof parse) {\n      if (~(index = address.indexOf(parse))) {\n        if ('number' === typeof instruction[2]) {\n          url[key] = address.slice(0, index);\n          address = address.slice(index + instruction[2]);\n        } else {\n          url[key] = address.slice(index);\n          address = address.slice(0, index);\n        }\n      }\n    } else if ((index = parse.exec(address))) {\n      url[key] = index[1];\n      address = address.slice(0, index.index);\n    }\n\n    url[key] = url[key] || (\n      relative && instruction[3] ? location[key] || '' : ''\n    );\n\n    //\n    // Hostname, host and protocol should be lowercased so they can be used to\n    // create a proper `origin`.\n    //\n    if (instruction[4]) url[key] = url[key].toLowerCase();\n  }\n\n  //\n  // Also parse the supplied query string in to an object. If we're supplied\n  // with a custom parser as function use that instead of the default build-in\n  // parser.\n  //\n  if (parser) url.query = parser(url.query);\n\n  //\n  // If the URL is relative, resolve the pathname against the base URL.\n  //\n  if (\n      relative\n    && location.slashes\n    && url.pathname.charAt(0) !== '/'\n    && (url.pathname !== '' || location.pathname !== '')\n  ) {\n    url.pathname = resolve(url.pathname, location.pathname);\n  }\n\n  //\n  // We should not add port numbers if they are already the default port number\n  // for a given protocol. As the host also contains the port number we're going\n  // override it with the hostname which contains no port number.\n  //\n  if (!required(url.port, url.protocol)) {\n    url.host = url.hostname;\n    url.port = '';\n  }\n\n  //\n  // Parse down the `auth` for the username and password.\n  //\n  url.username = url.password = '';\n  if (url.auth) {\n    instruction = url.auth.split(':');\n    url.username = instruction[0] || '';\n    url.password = instruction[1] || '';\n  }\n\n  url.origin = url.protocol && url.host && url.protocol !== 'file:'\n    ? url.protocol +'//'+ url.host\n    : 'null';\n\n  //\n  // The href is just the compiled result.\n  //\n  url.href = url.toString();\n}\n\n/**\n * This is convenience method for changing properties in the URL instance to\n * insure that they all propagate correctly.\n *\n * @param {String} part          Property we need to adjust.\n * @param {Mixed} value          The newly assigned value.\n * @param {Boolean|Function} fn  When setting the query, it will be the function\n *                               used to parse the query.\n *                               When setting the protocol, double slash will be\n *                               removed from the final url if it is true.\n * @returns {URL} URL instance for chaining.\n * @public\n */\nfunction set(part, value, fn) {\n  var url = this;\n\n  switch (part) {\n    case 'query':\n      if ('string' === typeof value && value.length) {\n        value = (fn || qs.parse)(value);\n      }\n\n      url[part] = value;\n      break;\n\n    case 'port':\n      url[part] = value;\n\n      if (!required(value, url.protocol)) {\n        url.host = url.hostname;\n        url[part] = '';\n      } else if (value) {\n        url.host = url.hostname +':'+ value;\n      }\n\n      break;\n\n    case 'hostname':\n      url[part] = value;\n\n      if (url.port) value += ':'+ url.port;\n      url.host = value;\n      break;\n\n    case 'host':\n      url[part] = value;\n\n      if (/:\\d+$/.test(value)) {\n        value = value.split(':');\n        url.port = value.pop();\n        url.hostname = value.join(':');\n      } else {\n        url.hostname = value;\n        url.port = '';\n      }\n\n      break;\n\n    case 'protocol':\n      url.protocol = value.toLowerCase();\n      url.slashes = !fn;\n      break;\n\n    case 'pathname':\n    case 'hash':\n      if (value) {\n        var char = part === 'pathname' ? '/' : '#';\n        url[part] = value.charAt(0) !== char ? char + value : value;\n      } else {\n        url[part] = value;\n      }\n      break;\n\n    default:\n      url[part] = value;\n  }\n\n  for (var i = 0; i < rules.length; i++) {\n    var ins = rules[i];\n\n    if (ins[4]) url[ins[1]] = url[ins[1]].toLowerCase();\n  }\n\n  url.origin = url.protocol && url.host && url.protocol !== 'file:'\n    ? url.protocol +'//'+ url.host\n    : 'null';\n\n  url.href = url.toString();\n\n  return url;\n}\n\n/**\n * Transform the properties back in to a valid and full URL string.\n *\n * @param {Function} stringify Optional query stringify function.\n * @returns {String} Compiled version of the URL.\n * @public\n */\nfunction toString(stringify) {\n  if (!stringify || 'function' !== typeof stringify) stringify = qs.stringify;\n\n  var query\n    , url = this\n    , protocol = url.protocol;\n\n  if (protocol && protocol.charAt(protocol.length - 1) !== ':') protocol += ':';\n\n  var result = protocol + (url.slashes ? '//' : '');\n\n  if (url.username) {\n    result += url.username;\n    if (url.password) result += ':'+ url.password;\n    result += '@';\n  }\n\n  result += url.host + url.pathname;\n\n  query = 'object' === typeof url.query ? stringify(url.query) : url.query;\n  if (query) result += '?' !== query.charAt(0) ? '?'+ query : query;\n\n  if (url.hash) result += url.hash;\n\n  return result;\n}\n\nUrl.prototype = { set: set, toString: toString };\n\n//\n// Expose the URL parser and some additional properties that might be useful for\n// others or testing.\n//\nUrl.extractProtocol = extractProtocol;\nUrl.location = lolcation;\nUrl.qs = qs;\n\nmodule.exports = Url;\n"]}